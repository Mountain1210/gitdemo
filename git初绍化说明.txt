/**git使用说明**/

/**这一步很重要**/
重新生成key
ssh-keygen -t rsa -C "邮箱名称"
回车，回车，回车
测试测试
在本地C:\Users\你的用户名.ssh生成文件夹，里面有id_rsa和id_rsa.pub两个文件 
然后复制id_rsa.pub文件里面的内容，到https://github.com/settings/keys新建一个， 

如果你已经改变了git密码，请运行下面的代码
两行都要运行
git config --global user.email "you@example.com"
git config --global user.name "Your Name"

/***********************************/
在家测试GIT

克隆库

git clone 

git remote

git fetch https://github.com/Mountain1210/gitdemo.git

git add .

git commit -m "你的文字"

git config --global user.email "you@example.com"
git config --global user.name "Your Name"

git push -u origin master


在公司测试更新命令

首先要保证在相同的分支上，执行
git pull

成功

发现一个问题，就是我在家里修改了git的密码，到公司里竟然没有提示重新输入密码的对话框

/***********************************/


$ git remote add gitdemo https://github.com/Mountain1210/gitdemo.git

$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>


$ git push gitdemo
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream gitdemo master

///中文翻译
$ git push -u gitdemo master   ****git push -u 项目名称 master*******
Counting objects: 3, done.
Writing objects: 100% (3/3), 228 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)

///************************好多年了都快忘了*************************/////
以下理执行指令
git init

git add .

git status

git commit -m "说明文字"

git remote add gitdemo https://github.com/Mountain1210/gitdemo.git *****git remote add 项目名称 自己仓库的远程地址*****

git push -u 项目名称 master

----分支操作
git branch 分支名

git checkout 分支名

git push -u 项目名称 分支名称   ****git push -u gitdemo gitreadme****

/*再次执行 git push -u */
git push -u 项目名称 master

在里面可以建一个文件夹gh-pages，必须叫这个名字才行，
可以用来以网页的形式进行预览。


合并到主分支上(master)
先切换master
git checkout master
git merge gitreadme




///************************遇见下列问题*************************/////



///查看提交过几次的命令/////////////////
git log

git log -p -2查看最后两次的命令


////***********************创建分支/////////////////

1.创建本地分支
git branch 分支名，例如：git branch 2.0.1.20120806
注：2.0.1.20120806是分支名称，可以随便定义。

2.切换本地分支
git checkout 分支名，例如从master切换到分支：git checkout 2.0.1.20120806

3.远程分支就是本地分支push到服务器上。比如master就是一个最典型的远程分支（默认）。
git push origin 2.0.1.20120806

4.远程分支和本地分支需要区分好，所以，在从服务器上拉取特定分支的时候，需要指定远程分支的名字。
git checkout --track origin/2.0.1.20120806
注意该命令由于带有--track参数，所以要求git1.6.4以上！这样git会自动切换到分支。

5.提交分支数据到远程服务器
git push origin <local_branch_name>:<remote_branch_name>
例如：
git push origin 2.0.1.20120806:2.0.1.20120806
一般当前如果不在该分支时，使用这种方式提交。如果当前在 2.0.1.20120806 分支下，也可以直接提交
git push

6.删除远程分支
git push origin :develop

-----------------------------------------------------------



1,从已有的分支创建新的分支(如从master分支),创建一个dev分支

Git checkout -b dev

2,创建完可以查看一下,分支已经切换到dev

git branch

    * dev

    master

3,提交该分支到远程仓库

git push origin dev

4,测试从远程获取dev

git pull origin dev

或者：

如果用命令行，运行 git fetch，可以将远程分支信息获取到本地，再运行 git checkout -b local-branchname origin/remote_branchname  就可以将远程分支映射到本地命名为local-branchname  的一分支

5,我觉得现在重要的就是设置git push,pull默认的提交获取分支,这样就很方便的使用git push 提交信息或git pull获取信息

git branch --set-upstream-to=origin/dev

取消对master的跟踪

git branch --unset-upstream master

6,现在随便修改一下工程文件的内容,然后git commit ,git push,之后就可以直接提交到远程的dev分支中,而不会是maste


